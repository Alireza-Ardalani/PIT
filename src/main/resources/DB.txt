<agency.tango.materialintroscreen.widgets.OverScrollViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<agency.tango.materialintroscreen.widgets.SwipeableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.preference.TwoStatePreference: boolean isChecked()> -> _SOURCE_
<android.support.design.widget.BottomNavigationView: int getSelectedItemId()> -> _SOURCE_
<android.support.design.widget.CheckableImageButton: boolean isChecked()> -> _SOURCE_
<android.support.design.widget.CheckableImageButton: void toggle()> -> _SOURCE_
<android.support.design.widget.CollapsingTextHelper: java.lang.CharSequence getText()> -> _SOURCE_
<android.support.design.widget.CoordinatorLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.design.widget.FloatingActionButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.design.widget.TabLayout$Tab: java.lang.CharSequence getText()> -> _SOURCE_
<android.support.design.widget.TabLayout$e: java.lang.CharSequence getText()> -> _SOURCE_
<android.support.v14.preference.MultiSelectListPreference: boolean[] getSelectedItems()> -> _SOURCE_
<android.support.v17.leanback.widget.CheckableImageView: boolean isChecked()> -> _SOURCE_
<android.support.v17.leanback.widget.CheckableImageView: void toggle()> -> _SOURCE_
<android.support.v4.widget.BottomSwipeRefreshLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.DrawerLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.SlidingPaneLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.SwipeRefreshLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.ab: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.al: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.ao: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.cz: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.f: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.g: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.h: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.i: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.j: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.m: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.o: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.q: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.s: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v4.widget.z: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.internal.view.menu.ActionMenuItem: boolean isChecked()> -> _SOURCE_
<android.support.v7.internal.widget.AbsActionBarView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.internal.widget.AbsSpinnerCompat: android.view.View getSelectedView()> -> _SOURCE_
<android.support.v7.internal.widget.AbsSpinnerICS: android.view.View getSelectedView()> -> _SOURCE_
<android.support.v7.internal.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.internal.widget.ActionBarContextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.internal.widget.AdapterViewCompat: long getSelectedItemId()> -> _SOURCE_
<android.support.v7.internal.widget.AdapterViewICS: long getSelectedItemId()> -> _SOURCE_
<android.support.v7.internal.widget.ListPopupWindow: long getSelectedItemId()> -> _SOURCE_
<android.support.v7.internal.widget.ListViewCompat: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.internal.widget.SpinnerCompat$DialogPopup: void onClick(android.content.DialogInterface,int)> -> _SOURCE_
<android.support.v7.internal.widget.SpinnerCompat$a: void onClick(android.content.DialogInterface,int)> -> _SOURCE_
<android.support.v7.internal.widget.SpinnerCompat: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.internal.widget.SpinnerCompat: void onClick(android.content.DialogInterface,int)> -> _SOURCE_
<android.support.v7.internal.widget.SpinnerICS$DialogPopup: void onClick(android.content.DialogInterface,int)> -> _SOURCE_
<android.support.v7.internal.widget.SpinnerICS: void onClick(android.content.DialogInterface,int)> -> _SOURCE_
<android.support.v7.internal.widget.a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.internal.widget.aa: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.internal.widget.f: long getSelectedItemId()> -> _SOURCE_
<android.support.v7.internal.widget.p: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.internal.widget.w: long getSelectedItemId()> -> _SOURCE_
<android.support.v7.preference.CheckBoxPreference$Listener: void onCheckedChanged(android.widget.CompoundButton,boolean)> -> _SOURCE_
<android.support.v7.preference.TwoStatePreference: boolean isChecked()> -> _SOURCE_
<android.support.v7.view.menu.ActionMenuItem: boolean isChecked()> -> _SOURCE_
<android.support.v7.view.menu.MenuItemImpl: boolean isChecked()> -> _SOURCE_
<android.support.v7.view.menu.MenuItemWrapperICS: boolean isChecked()> -> _SOURCE_
<android.support.v7.view.menu.a: boolean isChecked()> -> _SOURCE_
<android.support.v7.view.menu.h: boolean isChecked()> -> _SOURCE_
<android.support.v7.view.menu.i: boolean isChecked()> -> _SOURCE_
<android.support.v7.view.menu.j: boolean isChecked()> -> _SOURCE_
<android.support.v7.view.menu.k: boolean isChecked()> -> _SOURCE_
<android.support.v7.widget.AbsActionBarView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ActionBarContextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.AppCompatEditText: android.text.Editable getText()> -> _SOURCE_
<android.support.v7.widget.AppCompatEditText: java.lang.CharSequence getText()> -> _SOURCE_
<android.support.v7.widget.AppCompatSpinner: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.AppCompatSpinner: java.lang.Object getSelectedItem()> -> _SOURCE_
<android.support.v7.widget.AppCompatTextView: java.lang.CharSequence getText()> -> _SOURCE_
<android.support.v7.widget.DropDownListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ListPopupWindow: java.lang.Object getSelectedItem()> -> _SOURCE_
<android.support.v7.widget.ListPopupWindow: long getSelectedItemId()> -> _SOURCE_
<android.support.v7.widget.ListViewCompat: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.MenuPopupWindow$MenuDropDownListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.MenuPopupWindow$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.SearchView$$$$$$$: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.SearchView$Eo: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.SearchView$UpdatableTouchDelegate: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.SearchView$b: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.SearchView$c: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.SearchView$e: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.SearchView$f: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.SearchView$new: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.SwitchCompat: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.SwitchCompat: java.lang.CharSequence getTextOff()> -> _SOURCE_
<android.support.v7.widget.SwitchCompat: java.lang.CharSequence getTextOn()> -> _SOURCE_
<android.support.v7.widget.SwitchCompat: void toggle()> -> _SOURCE_
<android.support.v7.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.aa: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ab$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ab: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ac$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ad: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ae: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.af$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.af: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ag: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ah$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ah: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ai$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ai: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.aj: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ak$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ak: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.al$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.al: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.am: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.an: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ao$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ao: android.text.Editable getText()> -> _SOURCE_
<android.support.v7.widget.ao: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ao: java.lang.CharSequence getText()> -> _SOURCE_
<android.support.v7.widget.ap: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.aq$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.aq: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ar$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.as$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.as: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.at$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.at: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.au$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.au: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.av$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.av: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.aw$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.aw: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ax$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ax: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ay$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ay: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.az: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ba: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.bb: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.bb: void toggle()> -> _SOURCE_
<android.support.v7.widget.bc: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.bd: java.lang.CharSequence getText()> -> _SOURCE_
<android.support.v7.widget.bf: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.bf: void toggle()> -> _SOURCE_
<android.support.v7.widget.bh: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.bh: void toggle()> -> _SOURCE_
<android.support.v7.widget.bi: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.bi: void toggle()> -> _SOURCE_
<android.support.v7.widget.bj: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.bj: void toggle()> -> _SOURCE_
<android.support.v7.widget.bk: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.bk: void toggle()> -> _SOURCE_
<android.support.v7.widget.bm: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.bm: void toggle()> -> _SOURCE_
<android.support.v7.widget.bu: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.bw: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.bz: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.cb: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.cg: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ch: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.cm: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.cs: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.ct: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.cz: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.db: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.db: void toggle()> -> _SOURCE_
<android.support.v7.widget.de: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.de: void toggle()> -> _SOURCE_
<android.support.v7.widget.dh: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.do: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.dp: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.dq: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.eh: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.fa: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.fo: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.gl: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.gx: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.k: android.text.Editable getText()> -> _SOURCE_
<android.support.v7.widget.k: java.lang.CharSequence getText()> -> _SOURCE_
<android.support.v7.widget.l: android.text.Editable getText()> -> _SOURCE_
<android.support.v7.widget.l: java.lang.CharSequence getText()> -> _SOURCE_
<android.support.v7.widget.m: android.text.Editable getText()> -> _SOURCE_
<android.support.v7.widget.m: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.m: java.lang.CharSequence getText()> -> _SOURCE_
<android.support.v7.widget.mq: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.n: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.o: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.p: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.q: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.r: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.t: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.u: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.v: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.v: long getSelectedItemId()> -> _SOURCE_
<android.support.v7.widget.w: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.w: java.lang.CharSequence getText()> -> _SOURCE_
<android.support.v7.widget.x: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.y: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.y: java.lang.CharSequence getText()> -> _SOURCE_
<android.support.v7.widget.z: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.support.v7.widget.z: java.lang.CharSequence getText()> -> _SOURCE_
<android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.AbsSeekBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.AbsSeekBar: void onDraw(android.graphics.Canvas)> -> _SOURCE_
<android.widget.AbsSpinner: android.view.View getSelectedView()> -> _SOURCE_
<android.widget.AdapterView: int getSelectedItemPosition()> -> _SOURCE_
<android.widget.AdapterView: java.lang.Object getSelectedItem()> -> _SOURCE_
<android.widget.AdapterView: long getSelectedItemId()> -> _SOURCE_
<android.widget.AdapterViewAnimator: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.AutoCompleteTextView: android.text.Editable getText()> -> _SOURCE_
<android.widget.CheckBox: boolean isChecked()> -> _SOURCE_
<android.widget.CheckBox: void toggle()> -> _SOURCE_
<android.widget.CheckableLinearLayout: boolean isChecked()> -> _SOURCE_
<android.widget.CheckableLinearLayout: void toggle()> -> _SOURCE_
<android.widget.CheckableTextView: boolean isChecked()> -> _SOURCE_
<android.widget.CheckableTextView: void toggle()> -> _SOURCE_
<android.widget.CheckedTextView: boolean isChecked()> -> _SOURCE_
<android.widget.CheckedTextView: void toggle()> -> _SOURCE_
<android.widget.CompoundButton: boolean isChecked()> -> _SOURCE_
<android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<android.widget.CompoundButton: void toggle()> -> _SOURCE_
<android.widget.DatePicker: int getDayOfMonth()> -> _SOURCE_
<android.widget.DatePicker: int getMonth()> -> _SOURCE_
<android.widget.DatePicker: int getYear()> -> _SOURCE_
<android.widget.EditText: android.text.Editable getText()> -> _SOURCE_
<android.widget.EditText: java.lang.CharSequence getText()> -> _SOURCE_
<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)> -> _SOURCE_
<android.widget.Gallery: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.HorizontalScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.ListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.MediaController: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.MultiAutoCompleteTextView: android.text.Editable getText()> -> _SOURCE_
<android.widget.NumberPicker: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.NumberPicker: int getValue()> -> _SOURCE_
<android.widget.RadioButton: void toggle()> -> _SOURCE_
<android.widget.RadioGroup: int getCheckedRadioButtonId()> -> _SOURCE_
<android.widget.RadioGroup: void setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener)> -> _SOURCE_
<android.widget.RatingBar: float getRating()> -> _SOURCE_
<android.widget.ScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.SearchView: java.lang.CharSequence getQuery()> -> _SOURCE_
<android.widget.SeekBar: int getProgress()> -> _SOURCE_
<android.widget.SlidingDrawer: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.SlidingDrawer: void toggle()> -> _SOURCE_
<android.widget.Spinner: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.Spinner: int getSelectedItemPosition()> -> _SOURCE_
<android.widget.Spinner: java.lang.Object getSelectedItem()> -> _SOURCE_
<android.widget.Spinner: long getSelectedItemId()> -> _SOURCE_
<android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> _SOURCE_
<android.widget.Spinner: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)> -> _SOURCE_
<android.widget.StackView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.Switch: boolean isChecked()> -> _SOURCE_
<android.widget.Switch: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.Switch: void toggle()> -> _SOURCE_
<android.widget.SwitchCompat: boolean isChecked()> -> _SOURCE_
<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.TextView: java.lang.CharSequence getText()> -> _SOURCE_
<android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)> -> _SOURCE_
<android.widget.TiVideoView8: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.TimePicker: int getHour()> -> _SOURCE_
<android.widget.TimePicker: int getMinute()> -> _SOURCE_
<android.widget.ToggleButton: boolean isChecked()> -> _SOURCE_
<android.widget.ToggleButton: java.lang.CharSequence getTextOff()> -> _SOURCE_
<android.widget.ToggleButton: java.lang.CharSequence getTextOn()> -> _SOURCE_
<android.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.VideoView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.ZoomButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<android.widget.ZoomControls: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.AbsActionBarView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.ActionBarContextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.AppCompatCheckBox: boolean isChecked()> -> _SOURCE_
<androidx.appcompat.widget.AppCompatCheckBox: void toggle()> -> _SOURCE_
<androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()> -> _SOURCE_
<androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()> -> _SOURCE_
<androidx.appcompat.widget.AppCompatRadioButton: boolean isChecked()> -> _SOURCE_
<androidx.appcompat.widget.AppCompatRatingBar: float getRating()> -> _SOURCE_
<androidx.appcompat.widget.AppCompatSpinner: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.AppCompatSpinner: int getSelectedItemPosition()> -> _SOURCE_
<androidx.appcompat.widget.AppCompatSpinner: java.lang.Object getSelectedItem()> -> _SOURCE_
<androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()> -> _SOURCE_
<androidx.appcompat.widget.AppCompatToggleButton: boolean isChecked()> -> _SOURCE_
<androidx.appcompat.widget.C: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.DropDownListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.I: java.lang.CharSequence getText()> -> _SOURCE_
<androidx.appcompat.widget.ListPopupWindow: long getSelectedItemId()> -> _SOURCE_
<androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.N: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.SearchView$c: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.SearchView$f: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.SwitchCompat: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.SwitchCompat: void toggle()> -> _SOURCE_
<androidx.appcompat.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.V$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.ad$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.ad: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.aj$a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.h: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.j: android.text.Editable getText()> -> _SOURCE_
<androidx.appcompat.widget.j: java.lang.CharSequence getText()> -> _SOURCE_
<androidx.appcompat.widget.l: android.text.Editable getText()> -> _SOURCE_
<androidx.appcompat.widget.l: java.lang.CharSequence getText()> -> _SOURCE_
<androidx.appcompat.widget.p: android.text.Editable getText()> -> _SOURCE_
<androidx.appcompat.widget.p: java.lang.CharSequence getText()> -> _SOURCE_
<androidx.appcompat.widget.w: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.x: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.appcompat.widget.y: java.lang.CharSequence getText()> -> _SOURCE_
<androidx.constraintlayout.motion.widget.MotionLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.drawerlayout.widget.DrawerLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.preference.CheckBoxPreference: boolean isChecked()> -> _SOURCE_
<androidx.preference.MultiSelectListPreference: java.util.Set getValues()> -> _SOURCE_
<androidx.preference.SwitchPreferenceCompat: boolean isChecked()> -> _SOURCE_
<androidx.recyclerview.widget.D: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.viewpager.widget.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<androidx.viewpager.widget.ViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<ca.weixiao.widget.InfiniteScrollListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<carbon.widget.AutoCompleteEditText: android.text.Editable getText()> -> _SOURCE_
<carbon.widget.AutoCompleteEditText: java.lang.CharSequence getText()> -> _SOURCE_
<carbon.widget.CheckBox: boolean isChecked()> -> _SOURCE_
<carbon.widget.CheckBox: void toggle()> -> _SOURCE_
<carbon.widget.Chip: java.lang.String getText()> -> _SOURCE_
<carbon.widget.DropDown$c: boolean isChecked()> -> _SOURCE_
<carbon.widget.DropDown$c: void toggle()> -> _SOURCE_
<carbon.widget.DropDown: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<carbon.widget.RadioButton: boolean isChecked()> -> _SOURCE_
<carbon.widget.RadioButton: void toggle()> -> _SOURCE_
<carbon.widget.RangeSeekBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<carbon.widget.ScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<carbon.widget.SearchEditText: android.text.Editable getText()> -> _SOURCE_
<carbon.widget.SearchEditText: java.lang.CharSequence getText()> -> _SOURCE_
<carbon.widget.SeekBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<carbon.widget.Snackbar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<carbon.widget.Toolbar: java.lang.String getText()> -> _SOURCE_
<cc.dreamspark.intervaltimer.widgets.FloatingActionButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cc.dreamspark.intervaltimer.widgets.FloatingTextButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cc.pacer.androidapp.common.widgets.CircleImageView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cc.pacer.androidapp.ui.cardioworkoutplan.widget.VerticalProgressBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cc.pacer.androidapp.ui.cardioworkoutplan.widget.WorkoutViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cc.pacer.androidapp.ui.common.widget.HorizontalListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cc.pacer.androidapp.ui.common.widget.NonScrollableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cc.pacer.androidapp.ui.common.widget.OnTouchFixedViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cc.pacer.androidapp.ui.common.widget.SlidingUpPanelLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cc.pacer.androidapp.ui.common.widget.TrendChartIndicator: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cn.finalteam.galleryfinal.widget.HorizontalListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cn.finalteam.galleryfinal.widget.crop.CropImageView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cn.finalteam.galleryfinal.widget.zoonview.CupcakeGestureDetector: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cn.finalteam.galleryfinal.widget.zoonview.EclairGestureDetector: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cn.finalteam.galleryfinal.widget.zoonview.FroyoGestureDetector: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cn.imengya.basic.widget.DividerRadioGroup: int getCheckedRadioButtonId()> -> _SOURCE_
<cn.imengya.basic.widget.DividerRadioGroup: void setOnCheckedChangeListener(cn.imengya.basic.widget.DividerRadioGroup$OnCheckedChangeListener)> -> _SOURCE_
<cn.imengya.basic.widget.RulerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cn.qqtheme.framework.widget.WheelView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.PerfectServe.lib.widget.PSListViewIndex: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.PerfectServe.lib.widget.PinchViewImage: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.PerfectServe.lib.widget.WheelView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.PerfectServe.lib.widget.calendar.CalendarDay: int getMonth()> -> _SOURCE_
<com.PerfectServe.lib.widget.calendar.CalendarDay: int getYear()> -> _SOURCE_
<com.PerfectServe.lib.widget.calendar.CalendarPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.PerfectServe.lib.widget.calendar.CalendarUtils: int getYear(java.util.Calendar)> -> _SOURCE_
<com.abdula.pranabreath.view.components.div.SetSafeSwitch: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.actionbarsherlock.internal.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.actionbarsherlock.internal.widget.IcsAdapterView: long getSelectedItemId()> -> _SOURCE_
<com.actionbarsherlock.internal.widget.IcsSpinner: void onClick(android.content.DialogInterface,int)> -> _SOURCE_
<com.agamatrix.nimbus.shared.widgets.LinkableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.agamatrix.nimbus.shared.widgets.PagerContainer: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.agamatrix.nimbus.shared.widgets.swipemenulistview.SwipeMenuListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.agmostudio.uiwidget.PullToRefreshBase: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.aigestudio.wheelpicker.widgets.WheelDatePicker: int getMonth()> -> _SOURCE_
<com.aigestudio.wheelpicker.widgets.WheelDatePicker: int getYear()> -> _SOURCE_
<com.americanwell.android.member.widget.CheckableRelativeLayout: boolean isChecked()> -> _SOURCE_
<com.americanwell.android.member.widget.CheckableRelativeLayout: void toggle()> -> _SOURCE_
<com.americanwell.android.member.widget.ExpandableTextView: java.lang.CharSequence getText()> -> _SOURCE_
<com.amphetamobile.chest.ui.activity.widgets.IndexScroller: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.amphetamobile.chest.ui.activity.widgets.IndexableListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.android.droidinfinity.commonutilities.widgets.pickers.date.s: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.android.droidinfinity.commonutilities.widgets.pickers.image.CropOverlayView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.android.widgets.CustomEditText: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.android.widgets.EmailInsertView: boolean isChecked()> -> _SOURCE_
<com.android.widgets.HorizontalListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.android.widgets.PaperButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.android.widgets.ScrollViewCustom: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.android.widgets.SemiClosedSlidingDrawer: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.android.widgets.SemiClosedSlidingDrawer: void toggle()> -> _SOURCE_
<com.android.widgets.combobox.AutoCompleteOrTextView: java.lang.String getText()> -> _SOURCE_
<com.androidplot.ui.widget.TextLabelWidget: java.lang.String getText()> -> _SOURCE_
<com.anytimefitness.app.widget.CheckedIconTextView: boolean isChecked()> -> _SOURCE_
<com.anytimefitness.app.widget.CheckedIconTextView: void toggle()> -> _SOURCE_
<com.anytimefitness.app.widget.PageNavigatorView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.anytimefitness.app.widget.SpinnerWithDefault: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.anytimefitness.app.widget.StickyNestedScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.anytimefitness.app.widget.StickyScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.anytimefitness.app.widget.StreakButtonView: boolean isChecked()> -> _SOURCE_
<com.anytimefitness.app.widget.StreakButtonView: void toggle()> -> _SOURCE_
<com.anytimefitness.app.widget.VersionNumberView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.appvisionaire.framework.screenbase.widget.CheckableImageView: boolean isChecked()> -> _SOURCE_
<com.appvisionaire.framework.screenbase.widget.CheckableImageView: void toggle()> -> _SOURCE_
<com.azumio.android.argus.widget.NonSwipableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.azurechen.fcalendar.widget.FlexibleCalendar: int getMonth()> -> _SOURCE_
<com.azurechen.fcalendar.widget.FlexibleCalendar: int getYear()> -> _SOURCE_
<com.b1.b2.b3.material.widget.Slider: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.babelbark.widgets.AdvancedViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.babelbark.widgets.BetterSpinner: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.babelbark.widgets.NiceAutoCompleteTextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.blinkhealth.blinkandroid.widgets.checkout.ListenerAwareCheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.blinkhealth.blinkandroid.widgets.checkout.ListenerAwareCheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener,boolean)> -> _SOURCE_
<com.blinkhealth.blinkandroid.widgets.views.CustomPagingViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.blinkhealth.blinkandroid.widgets.views.NonSwipeableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.bodybuilding.checkout.widget.EditText: void addTextChangedListener(android.text.TextWatcher)> -> _SOURCE_
<com.bodybuilding.checkout.widget.EditTextWithTopMessage: java.lang.String getText()> -> _SOURCE_
<com.bodybuilding.checkout.widget.InertCheckBox: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.bruxlabsnore.widgets.CustomButtonResizable: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.bruxlabsnore.widgets.EditTextPreferenceEx: java.lang.String getText()> -> _SOURCE_
<com.bruxlabsnore.widgets.LockableScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.bruxlabsnore.widgets.SlidingSwitch: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.bruxlabsnore.widgets.ViewPagerEx: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.bruxlabsnore.widgets.b: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.bsc.bsca.cem.ui.widget.NonSwipableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.bsc.bsca.cem.ui.widget.chart.PieRadarChartBase: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.c25k.reboot.view.CustomSoundSwitch: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.calm.android.ui.SettingsButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.camerasideas.baseutils.widget.DragFrameLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.camerasideas.baseutils.widget.FloatingActionButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.camerasideas.baseutils.widget.FloatingActionMenu: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.camerasideas.baseutils.widget.Label: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.camerasideas.baseutils.widget.VerticalViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.camerasideas.collagemaker.activity.widget.CirclePageIndicator: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.camerasideas.collagemaker.activity.widget.EditLayoutView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.camerasideas.collagemaker.activity.widget.RookieTipsView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.camerasideas.collagemaker.activity.widget.RotateScaleBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.camerasideas.collagemaker.activity.widget.StartPointSeekBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.chad.library.adapter.base.BaseViewHolder: com.chad.library.adapter.base.BaseViewHolder setOnCheckedChangeListener(int,android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.charitymilescm.android.widget.LetterSpacingButton: java.lang.CharSequence getText()> -> _SOURCE_
<com.charitymilescm.android.widget.LetterSpacingTextView: java.lang.CharSequence getText()> -> _SOURCE_
<com.charitymilescm.android.widget.MyScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.charitymilescm.android.widget.NonSwipeableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.charitymilescm.android.widget.ObservableScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.charitymilescm.android.widget.actionsheet.ActionSheetItem: java.lang.String getText()> -> _SOURCE_
<com.charitymilescm.android.widget.viewFlipper.IntroViewFlipper: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.clockai.alarmclock.widget.BedsideClockView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.clockai.alarmclock.widget.CustomClockView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.clockai.alarmclock.widget.CustomRecyclerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.clockai.alarmclock.widget.ExpandedViewPagerLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.clockai.alarmclock.widget.Indicator.CirclePageIndicator: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.clockai.alarmclock.widget.Indicator.LinePageIndicator: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.clockai.alarmclock.widget.Indicator.UnderlinePageIndicator: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.clockai.alarmclock.widget.TimeSelectView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.clockai.alarmclock.widget.TimeSelectView: int getMinute()> -> _SOURCE_
<com.clockai.alarmclock.widget.animation.ColorfulLampView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.clockai.alarmclock.widget.numberpicker.CustomNumberPicker: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.clockai.alarmclock.widget.numberpicker.CustomNumberPicker: int getValue()> -> _SOURCE_
<com.clockai.alarmclock.widget.switchbutton.SwitchButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.clockai.alarmclock.widget.switchbutton.SwitchButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.codetroopers.betterpickers.widget.UnderlinePageIndicatorPicker: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.commit451.untriggered.UntriggeredRadioButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.commit451.untriggered.UntriggeredSwitchCompat: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.cootek.drinkclock.widget.theme.ThemedSwitchCompat: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.cootek.veeu.main.view.widget.FeedsListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.cootek.veeu.main.view.widget.TRecyclerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.cootek.veeu.sdk.main.view.widget.FeedsListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.cootek.veeu.sdk.main.view.widget.SlideBackLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.cootek.veeu.sdk.main.view.widget.SwipeBackLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.cootek.veeu.sdk.main.view.widget.TRecyclerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.cronometer.android.widget.DatePicker: int getMonth()> -> _SOURCE_
<com.cronometer.android.widget.DatePicker: int getYear()> -> _SOURCE_
<com.crystal.crystalrangeseekbar.widgets.CrystalRangeSeekbar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.crystal.crystalrangeseekbar.widgets.CrystalSeekbar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.doomonafireball.betterpickers.widget.UnderlinePageIndicatorPicker: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.dumsco.stressscan.application.widgets.NonSwipeViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.epic.clinical.orders.view.h: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.facebook.react.views.checkbox.ReactCheckBoxEvent: boolean getIsChecked()> -> _SOURCE_
<com.fitness.workout.exercise.ui.widget.CustomViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fitness.workout.exercise.ui.widget.FeedbackEditWidget: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fitness.workout.exercise.ui.widget.PickerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fitness.workout.exercise.ui.widget.RateView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fitness.workout.exercise.ui.widget.ScaleRulerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fitness.workout.exercise.ui.widget.SlidingControlViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fitness.workout.exercise.ui.widget.TimePickerView: int getMinute()> -> _SOURCE_
<com.fitness.workout.exercise.ui.widget.billing.BillingCheckWidget: boolean isChecked()> -> _SOURCE_
<com.fitness.workout.exercise.ui.widget.billing.BillingCheckWidget: void toggle()> -> _SOURCE_
<com.fitness.workout.exercise.ui.widget.goal.GoalSelectScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fitness.workout.exercise.ui.widget.training.TrainFeedbackView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fitnesskeeper.runkeeper.component.SingleLineCell: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.fitnessmobileapps.fma.views.widgets.AccurateRatingBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fitnessmobileapps.fma.views.widgets.AccurateRatingBar: float getRating()> -> _SOURCE_
<com.fitnessmobileapps.fma.views.widgets.LockableParallaxScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fitnessmobileapps.fma.views.widgets.custom.TouchyWebView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fitnow.loseit.widgets.PinWidget: java.lang.String getText()> -> _SOURCE_
<com.fitnow.loseit.widgets.c: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fitstar.pt.ui.settings.common.SwitchSettingView: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.fitstar.pt.ui.settings.d.b: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.freeletics.view.CheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.fullpower.applications.sleepz.widgets.Dial: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fullpower.applications.sleepz.widgets.FPFlexRadioGroup: void setOnCheckedChangeListener(com.fullpower.applications.sleepz.widgets.FPFlexRadioGroup$a)> -> _SOURCE_
<com.fullpower.applications.sleepz.widgets.GraphicalRangePicker: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fullpower.applications.sleepz.widgets.TimeRangeRing: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.fullpower.widget.SortButtonGroup: void setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener)> -> _SOURCE_
<com.fullpower.widget.ToggleableRadioButton: void toggle()> -> _SOURCE_
<com.fullpower.widget.ViewPicker: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.garmin.android.apps.connectmobile.view.view_3_0.GCMComplexOneLineButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.garmin.android.apps.connectmobile.view.view_3_0.GCMComplexTwoLineButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.garmin.android.framework.widget.NumberPickerButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.garmin.android.framework.widget.SpinnerPreference: void onClick(android.content.DialogInterface,int)> -> _SOURCE_
<com.garmin.android.framework.widget.a.f: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.github.florent37.singledateandtimepicker.widget.WheelPicker: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.github.jamesgay.fitnotes.view.d: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.github.xinthink.rnmk.widget.MKTouchable: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.glow.android.eve.ui.widget.CustomViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.glow.android.eve.ui.widget.CycleView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.glow.android.eve.ui.widget.HomeTooltipLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.glow.android.eve.ui.widget.LoadingView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.glow.android.swerve.widget.PremiumBottomViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.glow.android.ui.widget.CircularRevealView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.glow.android.ui.widget.LoadingView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.glow.android.ui.widget.LoadingViewBlack: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.glow.android.ui.widget.UninterceptableTextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.gnresound.tinnitus.architecture.presentation.widget.NonSwipeableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.gnresound.tinnitus.widget.CirclePageIndicator: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.gnresound.tinnitus.widget.SoundScapeBubble: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.google.android.libraries.cast.companionlibrary.widgets.IntroductoryOverlay: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.google.android.material.internal.CheckableImageButton: boolean isChecked()> -> _SOURCE_
<com.google.android.material.textfield.TextInputEditText: android.text.Editable getText()> -> _SOURCE_
<com.gotokeep.camera.widget.touchview.TouchImageView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.gotokeep.keep.commonui.widget.KeepSwipeRefreshLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.gotokeep.keep.commonui.widget.picker.view.WheelView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.gotokeep.keep.commonui.widget.recyclerview.TouchRecyclerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.gotokeep.keep.commonui.widget.rulers.InnerRulers.HorizontalRuler: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.gotokeep.keep.commonui.widget.rulers.InnerRulers.VerticalRuler: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.gotokeep.social.timeline.widget.ExpandableTextView: java.lang.CharSequence getText()> -> _SOURCE_
<com.grinasys.fwl.widget.DifficultySelectorView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.grinasys.fwl.widget.RMRPlayButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.grinasys.fwl.widget.SwipeableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.grinasys.fwl.widget.picker.HorizontalPickerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.grinasys.puremind.android.ui.widget.CircularSeekBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.grinasys.puremind.android.ui.widget.SwipeableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.grinasys.puremind.android.ui.widget.TouchExtenderView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.grinasys.puremind.android.ui.widget.numberpicker.NumberPicker: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.gtomato.android.ui.widget.CarouselView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.h6ah4i.android.widget.verticalseekbar.VerticalSeekBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.haibison.android.lockpattern.widget.LockPatternView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.healint.migraineapp.view.widget.IntensityView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.healthifyme.basic.shopify.view.widget.LockableScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.healthifyme.basic.widgets.CheckableImageView: boolean isChecked()> -> _SOURCE_
<com.healthifyme.basic.widgets.CheckableImageView: void toggle()> -> _SOURCE_
<com.healthifyme.basic.widgets.CheckableTextView: boolean isChecked()> -> _SOURCE_
<com.healthifyme.basic.widgets.CheckableTextView: void toggle()> -> _SOURCE_
<com.healthifyme.basic.widgets.HMERadioButton: boolean isChecked()> -> _SOURCE_
<com.healthifyme.basic.widgets.HMERadioButton: void toggle()> -> _SOURCE_
<com.healthifyme.basic.widgets.HMERadioGroup: void setOnCheckedChangeListener(com.healthifyme.basic.widgets.HMERadioGroup$b)> -> _SOURCE_
<com.healthifyme.basic.widgets.NonSwipeableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.healthifyme.basic.widgets.fab_menu.FloatingActionItem: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.healthifyme.basic.widgets.fab_menu.FloatingActionMenu: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.healthifyme.basic.widgets.fab_menu.Label: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.helpscout.beacon.internal.common.widget.stack.CardContainerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.het.comres.widget.LeftSlideListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.hola.lib.widget.BaseRecyclerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.hola.lib.widget.GridGallery: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.hola.lib.widget.ScaleOnClickImageView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.hola.lib.widget.ScaleOnClickTextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.hola.lib.widget.ScaleOnClickView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.htsmart.wristband.app.ui.widget.RulerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.huawei.crowdtestsdk.feedback.widgets.WheelView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.huawei.crowdtestsdk.notices.widgets.CheckEditText: boolean isChecked()> -> _SOURCE_
<com.huawei.crowdtestsdk.notices.widgets.CheckEditText: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.huawei.crowdtestsdk.notices.widgets.RadioEditText: android.text.Editable getText()> -> _SOURCE_
<com.huawei.crowdtestsdk.notices.widgets.RadioEditText: boolean isChecked()> -> _SOURCE_
<com.huawei.crowdtestsdk.widgets.CustViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.huawei.crowdtestsdk.widgets.RecordButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.huawei.crowdtestsdk.widgets.ratingBar.RatingBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.huawei.crowdtestsdk.widgets.ratingBar.RatingBar: float getRating()> -> _SOURCE_
<com.huawei.crowdtestsdk.widgets.searchView.EditTextClear: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.huawei.crowdtestsdk.widgets.searchView.SearchView: void addTextChangedListener(com.huawei.crowdtestsdk.widgets.searchView.ITextChangeCallBack)> -> _SOURCE_
<com.huawei.nfc.carrera.ui.widget.CmbClearEditText: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.huawei.pay.ui.widget.ClearEditText: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.humana.go365.common.view.SwitchListenerless: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.ihealth.widget_view.NumberPicker: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.ihealth.widget_view.NumberPicker: int getValue()> -> _SOURCE_
<com.ihealth.widget_view.SlidingDrawLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.ihealth.widget_view.SlidingDrawLayout: void toggle()> -> _SOURCE_
<com.ihealth.widget_view.TouchDisableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.ihealth.widget_view.listview.ReFreshListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.imagesource.android.ui.capture.CaptureIndexFieldActivity: void addTextChangedListenerValidation(android.widget.EditText,com.imagesource.android.ui.common.ClassValidation)> -> _SOURCE_
<com.imagesource.android.ui.capture.CaptureIndexFieldActivity: void addTextChangedListenerValidationSpinner(android.widget.Spinner,com.imagesource.android.ui.common.ClassValidation)> -> _SOURCE_
<com.imagesource.android.ui.capture.TableIndexFieldActivity: void addTextChangedListenerValidation(android.widget.EditText,com.imagesource.android.ui.common.ClassValidation)> -> _SOURCE_
<com.imagesource.android.ui.icmsdk.CaptureIndexFieldSDKActivity: void addTextChangedListenerValidation(android.widget.EditText,com.imagesource.android.ui.common.ClassValidation)> -> _SOURCE_
<com.imagesource.android.ui.icmsdk.CaptureIndexFieldSDKActivity: void addTextChangedListenerValidationSpinner(android.widget.Spinner,com.imagesource.android.ui.common.ClassValidation)> -> _SOURCE_
<com.iteration.widget.a: boolean isChecked()> -> _SOURCE_
<com.iteration.widget.a: void toggle()> -> _SOURCE_
<com.jaga.wheel.widget.WheelView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.janyun.jyou.watch.view.SwitchButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.jeek.calendar.widget.calendar.month.MonthView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.jeek.calendar.widget.calendar.schedule.ScheduleLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.jeek.calendar.widget.calendar.week.WeekView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kankan.wheel.widget.WheelView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kaylaitsines.sweatwithkayla.dashboard.widget.Carousel: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kaylaitsines.sweatwithkayla.ui.widget.Carousel: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kaylaitsines.sweatwithkayla.ui.widget.ControllableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kaylaitsines.sweatwithkayla.ui.widget.DashboardCarousel: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kaylaitsines.sweatwithkayla.ui.widget.ExpandableList: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kaylaitsines.sweatwithkayla.ui.widget.HorrizontalScroller: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kaylaitsines.sweatwithkayla.ui.widget.InterceptLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kaylaitsines.sweatwithkayla.ui.widget.MultiTouchImageView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kaylaitsines.sweatwithkayla.ui.widget.NoSwipeViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kaylaitsines.sweatwithkayla.ui.widget.PhotoBrowser: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kaylaitsines.sweatwithkayla.ui.widget.RecipeList: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kaylaitsines.sweatwithkayla.ui.widget.RecipeListScroller: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kaylaitsines.sweatwithkayla.ui.widget.VerticalScroller: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kaylaitsines.sweatwithkayla.workout.widget.WorkoutVideoList: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.keep.fit.widget.ClickEffectTextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.keep.fit.widget.CustomViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.keep.fit.widget.HeaderNotInterceptLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.keep.fit.widget.TimePicker: int getMinute()> -> _SOURCE_
<com.kingnew.foreign.measure.widget.CustomWordSpaceTextView: java.lang.CharSequence getText()> -> _SOURCE_
<com.kingnew.foreign.measure.widget.a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kingnew.foreign.other.widget.a.a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kingnew.foreign.other.widget.datapicker.a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kingnew.foreign.other.widget.edittext.EditTextWithClear: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kingnew.foreign.other.widget.numberpicker.NumberPicker: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kingnew.foreign.other.widget.numberpicker.NumberPicker: int getValue()> -> _SOURCE_
<com.kingnew.foreign.other.widget.numberpicker.c: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kingnew.foreign.other.widget.switchbutton.MySwitchButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kingnew.foreign.service.widget.chart.ChartView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kingnew.foreign.system.view.widget.RulerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kingnew.foreign.system.view.widget.gallery.h: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kinsa.widget.CheckableButton: boolean isChecked()> -> _SOURCE_
<com.kinsa.widget.CheckableButton: void toggle()> -> _SOURCE_
<com.kinsa.widget.TimePickerDialogFragment: int getMinute()> -> _SOURCE_
<com.knowyourmeds.widget.SlideButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.kyleduo.switchbutton.SwitchButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.lark.meadowlark2.view.SegmentedGroup: void setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener)> -> _SOURCE_
<com.lifebeam.android.vi.widget.CheckableImageButton: boolean isChecked()> -> _SOURCE_
<com.lifebeam.android.vi.widget.CheckableImageButton: void setOnCheckedChangeListener(com.lifebeam.android.vi.widget.CheckableImageButton$b)> -> _SOURCE_
<com.lifebeam.android.vi.widget.CheckableImageButton: void toggle()> -> _SOURCE_
<com.lifebeam.android.vi.widget.old.ViButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.lifebeam.android.vi.widget.old.ViSwitchToggle: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.lifebeam.android.vi.widget.v2.ViEditTextWithLabel: java.lang.String getText()> -> _SOURCE_
<com.lose.weight.workout.fix.body.app.widget.ChartView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.lose.weight.workout.fix.body.app.widget.DKDragView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.lose.weight.workout.fix.body.app.widget.PlankScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.lose.weight.workout.fix.body.app.widget.RepetitionPushUpCountView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.lose.weight.workout.fix.body.app.widget.TimeLengthChooseView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.lose.weight.workout.fix.body.workout.widget.a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.lsjwzh.widget.recyclerviewpager.RecyclerViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.mantuboro.widget.IndexableListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.markupartist.android.widget.PullToRefreshListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.mdlive.mdlcore.fwfrodeo.fwf.widget.FwfCarouselWidget: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.mdlive.mdlcore.fwfrodeo.fwf.widget.FwfCheckBoxWidget: boolean isChecked()> -> _SOURCE_
<com.mdlive.mdlcore.fwfrodeo.fwf.widget.FwfCreditCardExpirationWidget: java.lang.String getText()> -> _SOURCE_
<com.mdlive.mdlcore.fwfrodeo.fwf.widget.FwfEditTextWidget: java.lang.String getText()> -> _SOURCE_
<com.mdlive.mdlcore.fwfrodeo.fwf.widget.FwfMaterialPhoneNumberWidget: java.lang.String getText()> -> _SOURCE_
<com.mdlive.mdlcore.fwfrodeo.fwf.widget.FwfPhoneNumberWidget: java.lang.String getText()> -> _SOURCE_
<com.mdlive.mdlcore.fwfrodeo.fwf.widget.FwfRatingUnit: void toggle()> -> _SOURCE_
<com.mdlive.mdlcore.fwfrodeo.fwf.widget.FwfSwitchWidget: boolean isChecked()> -> _SOURCE_
<com.mdlive.mdlcore.fwfrodeo.fwf.widget.FwfTextViewWidget: java.lang.String getText()> -> _SOURCE_
<com.medicalgroupsoft.medical.app.ui.mainscreen.widgets.SideIndexView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.meevii.color.common.widget.GuideCheckBox: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.meevii.color.common.widget.PlayButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.meevii.color.common.widget.ScrollableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.meevii.color.common.widget.StarView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.meevii.color.common.widget.banner.AutoViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.mindbodyonline.express.ui.widgets.ExpressDatePicker: int getMonth()> -> _SOURCE_
<com.mindbodyonline.express.ui.widgets.ExpressDatePicker: int getYear()> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.CalibrationWheelView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.CenterTouchSeekBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.ClockNumberSelectorView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.DonutProgress: java.lang.String getText()> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.EventCircleView.EventCircleView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.LinkedViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.PeekLayerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.RangeSeekBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.ShineDatePicker: int getMonth()> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.ShineDatePicker: int getYear()> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.ShineNumberPicker: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.ShineNumberPicker: int getValue()> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.ShineTimePicker$SavedState: int getMinute()> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.TransparentClickView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.TutorialView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.rangeBars.RangeBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.misfitwearables.prometheus.common.widget.rangebar.RangeBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.mynetdiary.ui.components.animatedwidgets.WeightProgressView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.mypopsy.widget.FloatingSearchView$RecyclerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.mypopsy.widget.FloatingSearchView: java.lang.CharSequence getText()> -> _SOURCE_
<com.mypopsy.widget.FloatingSearchView: void addTextChangedListener(android.text.TextWatcher)> -> _SOURCE_
<com.netpulse.mobile.core.ui.widget.CheckedLinearLayout: boolean isChecked()> -> _SOURCE_
<com.netpulse.mobile.core.ui.widget.CheckedRelativeLayout: boolean isChecked()> -> _SOURCE_
<com.netpulse.mobile.core.ui.widget.NoSwipeViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.netpulse.mobile.core.ui.widget.SlidingUpPanelLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.netpulse.mobile.goalcenter.ui.widget.ViewPagerGoalWizard: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.netpulse.mobile.legacy.ui.widget.SlidingLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.netpulse.mobile.social.ui.widget.TextViewFixTouchConsume: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.newtechsys.widgets.CheckableTwoLine: boolean isChecked()> -> _SOURCE_
<com.newtechsys.widgets.CheckableTwoLine: void toggle()> -> _SOURCE_
<com.nike.activitycommon.widgets.viewpager.SafeViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.nike.music.ui.widget.NestedHorizontalScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.northcube.util.ui.widget.NumberPicker: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.northcube.util.ui.widget.NumberPicker: int getValue()> -> _SOURCE_
<com.onemedical.android.widget.InterceptTouchLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.ox.component.ui.widget.ripple.RippleButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.ox.component.ui.widget.ripple.RippleFrameLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.ox.component.ui.widget.ripple.RippleImageView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.ox.component.ui.widget.ripple.RippleLinearLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.ox.component.ui.widget.ripple.RippleRelativeLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.ox.component.ui.widget.ripple.RippleTextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.period.calendar.rosa.menstrual.tracker.widget.NoScrollViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.period.calendar.rosa.menstrual.tracker.widget.NumberPickerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.period.calendar.rosa.menstrual.tracker.widget.slideview.SlideNumberChooseView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.period.tracker.widgets.HorizontalPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.petmeds1800.util.CustomSwitch: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.pfizer.us.digitalcompanion.feature.notes.ui.widget.CustomNotesViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.philips.cdp2.common.view.SilentSwitch: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.philips.cdp2.powersleep.view.CustomSwitch: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.philips.platform.csw.permission.uielement.SilenceableSwitch: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.philips.platform.mya.csw.permission.uielement.SilenceableSwitch: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.philips.platform.uid.view.widget.DotNavigationIndicator: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.philips.platform.uid.view.widget.EditText: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.philips.platform.uid.view.widget.Label: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.philips.platform.uid.view.widget.ProgressBarButton: java.lang.String getText()> -> _SOURCE_
<com.philips.platform.uid.view.widget.Slider: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.pili.pldroid.player.widget.PLVideoTextureView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.pili.pldroid.player.widget.PLVideoView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.pili.pldroid.player.widget.a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.pregnancy.test.startdate.Fourth2: void onRadioButtonClicked(android.view.View)> -> _SOURCE_
<com.qliqsoft.widget.CenteredRadioImageButton: void toggle()> -> _SOURCE_
<com.qliqsoft.widget.CheckableImageView: boolean isChecked()> -> _SOURCE_
<com.qliqsoft.widget.CheckableImageView: void toggle()> -> _SOURCE_
<com.qliqsoft.widget.CheckableRelativeLayout: boolean isChecked()> -> _SOURCE_
<com.qliqsoft.widget.CheckableRelativeLayout: void toggle()> -> _SOURCE_
<com.qliqsoft.widget.HackyViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.qliqsoft.widget.ImageRadioGroup: void setOnCheckedChangeListener(com.qliqsoft.widget.ImageRadioGroup$OnCheckedChangeListener)> -> _SOURCE_
<com.qliqsoft.widget.SortableListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.qliqsoft.widget.scrollview.AbstractSlotView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.qliqsoft.widget.scrollview.FixedSlotView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.qliqsoft.widget.swipes.BothSideActionsItem: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.qliqsoft.widget.swipes.ListViewSwipeTrap: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.qozix.tileview.widgets.ZoomPanLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.qualaroo.ui.render.widget.ListeningCheckableGroup: void setOnCheckedChangeListener(com.qualaroo.ui.render.widget.ListeningCheckableGroup$c)> -> _SOURCE_
<com.qualaroo.ui.render.widget.a: boolean isChecked()> -> _SOURCE_
<com.qualaroo.ui.render.widget.a: java.lang.String getText()> -> _SOURCE_
<com.qualaroo.ui.render.widget.a: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.qualaroo.ui.render.widget.a: void toggle()> -> _SOURCE_
<com.quatkhoi.widget.IndexableListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.resmed.mon.ui.view.RMONSwitchCompat: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.rey.material.widget.Button: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.rey.material.widget.CheckedImageView: boolean isChecked()> -> _SOURCE_
<com.rey.material.widget.CheckedImageView: void toggle()> -> _SOURCE_
<com.rey.material.widget.CheckedTextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.rey.material.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.rey.material.widget.DatePicker$MonthAdapter: int getMonth()> -> _SOURCE_
<com.rey.material.widget.DatePicker$MonthAdapter: int getYear()> -> _SOURCE_
<com.rey.material.widget.DatePicker$MonthView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.rey.material.widget.DatePicker: int getMonth()> -> _SOURCE_
<com.rey.material.widget.DatePicker: int getYear()> -> _SOURCE_
<com.rey.material.widget.EditText: android.text.Editable getText()> -> _SOURCE_
<com.rey.material.widget.EditText: void addTextChangedListener(android.text.TextWatcher)> -> _SOURCE_
<com.rey.material.widget.FloatingActionButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.rey.material.widget.FrameLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.rey.material.widget.ImageButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.rey.material.widget.ImageView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.rey.material.widget.LinearLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.rey.material.widget.ListPopupWindow: long getSelectedItemId()> -> _SOURCE_
<com.rey.material.widget.RadioButton: void toggle()> -> _SOURCE_
<com.rey.material.widget.RelativeLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.rey.material.widget.Slider: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.rey.material.widget.Spinner: android.view.View getSelectedView()> -> _SOURCE_
<com.rey.material.widget.Switch: boolean isChecked()> -> _SOURCE_
<com.rey.material.widget.Switch: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.rey.material.widget.Switch: void setOnCheckedChangeListener(com.rey.material.widget.Switch$OnCheckedChangeListener)> -> _SOURCE_
<com.rey.material.widget.Switch: void toggle()> -> _SOURCE_
<com.rey.material.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.rey.material.widget.TimePicker: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.rey.material.widget.TimePicker: int getMinute()> -> _SOURCE_
<com.rey.material.widget.YearPicker$YearAdapter: int getYear()> -> _SOURCE_
<com.rey.material.widget.YearPicker: int getYear()> -> _SOURCE_
<com.rockmyrun.rockmyrun.widgets.CheckableRelativeLayout: boolean isChecked()> -> _SOURCE_
<com.rockmyrun.rockmyrun.widgets.CheckableRelativeLayout: void toggle()> -> _SOURCE_
<com.runloop.seconds.widget.CheckableLinearLayout: boolean isChecked()> -> _SOURCE_
<com.runloop.seconds.widget.CheckableLinearLayout: void toggle()> -> _SOURCE_
<com.runloop.seconds.widget.FilledCircleView: boolean isChecked()> -> _SOURCE_
<com.runloop.seconds.widget.FilledCircleView: void toggle()> -> _SOURCE_
<com.salesforce.android.service.common.ui.views.SalesforceFloatingActionToggleButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.samsung.android.app.shealth.expert.consultation.uk.ui.widgets.RatingBarView: float getRating()> -> _SOURCE_
<com.samsung.android.app.shealth.program.plugin.widget.ExpandableTextView: java.lang.CharSequence getText()> -> _SOURCE_
<com.samsung.android.app.shealth.program.plugin.widget.slideuppanel.LockableRecyclerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.samsung.android.app.shealth.program.plugin.widget.slideuppanel.ProgramViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.samsung.android.app.shealth.program.plugin.widget.slideuppanel.SlidingUpPanelLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.samsung.android.app.shealth.program.plugin.widget.slidingpanel.SlidingUpPanelLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.samsung.android.app.shealth.tracker.weight.widget.WeightEditText: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.samsung.android.app.shealth.widget.EGridView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.samsung.android.app.shealth.widget.EListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.samsung.android.app.shealth.widget.GedDateTimeFactoryBuilder$GedDatePicker: int getMonth()> -> _SOURCE_
<com.samsung.android.app.shealth.widget.GedDateTimeFactoryBuilder$GedDatePicker: int getYear()> -> _SOURCE_
<com.samsung.android.app.shealth.widget.GedDateTimeFactoryBuilder$GedTimePicker: int getMinute()> -> _SOURCE_
<com.samsung.android.app.shealth.widget.GedNumberFactoryBuilder$GedNumberPicker: int getValue()> -> _SOURCE_
<com.samsung.android.app.shealth.widget.HDatePicker: int getMonth()> -> _SOURCE_
<com.samsung.android.app.shealth.widget.HDatePicker: int getYear()> -> _SOURCE_
<com.samsung.android.app.shealth.widget.HNumberPicker: int getValue()> -> _SOURCE_
<com.samsung.android.app.shealth.widget.HTimePicker: int getMinute()> -> _SOURCE_
<com.samsung.android.app.shealth.widget.SepDateTimeFactoryBuilder$SepDatePicker: int getMonth()> -> _SOURCE_
<com.samsung.android.app.shealth.widget.SepDateTimeFactoryBuilder$SepDatePicker: int getYear()> -> _SOURCE_
<com.samsung.android.app.shealth.widget.SepDateTimeFactoryBuilder$SepTimePicker: int getMinute()> -> _SOURCE_
<com.samsung.android.app.shealth.widget.SepNumberFactoryBuilder$SepNumberPicker: int getValue()> -> _SOURCE_
<com.samsung.android.app.shealth.widget.StickyScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.samsung.android.app.shealth.widget.VerticalViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.samsung.android.app.shealth.widget.fab.FloatingActionsMenu: void toggle()> -> _SOURCE_
<com.samsung.android.app.shealth.widget.fab.TouchDelegateGroup: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.samsung.android.app.shealth.widget.slidingpanel.SlidingUpPanelLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.samsung.android.app.shealth.widget.valuepicker.NumberPickerView2: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.seattleclouds.widget.SCTabWidget$1: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.seattleclouds.widget.SCTabWidget$2: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.seattleclouds.widget.SCViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.seattleclouds.widget.n: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.seattleclouds.widget.o: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.sillens.shapeupclub.widget.ObservableScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.skyscape.android.ui.widget.PanelSwitcher: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.snipermob.sdk.mobileads.widget.html.AdWebView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.sonosite.sonoaccess.widgets.CirclePageIndicator: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.sonosite.sonoaccess.widgets.TextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.sparkpeople.androidtracker.widget.crop.RotationGestureDetector: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.spruce.messenger.ui.widgets.CheckableRelativeLayout: boolean isChecked()> -> _SOURCE_
<com.spruce.messenger.ui.widgets.CheckableRelativeLayout: void toggle()> -> _SOURCE_
<com.spruce.messenger.ui.widgets.NoSwipeViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.spruce.messenger.ui.widgets.PathwayButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.spruce.messenger.ui.widgets.TouchThroughTextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.spruce.messenger.ui.widgets.dialpad.DigitsEditText: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.sprylab.android.widget.TextureVideoView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.stepstone.stepper.internal.widget.StepViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.takisoft.datetimepicker.widget.DatePicker: int getMonth()> -> _SOURCE_
<com.takisoft.datetimepicker.widget.DatePicker: int getYear()> -> _SOURCE_
<com.takisoft.datetimepicker.widget.NumberPicker: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.takisoft.datetimepicker.widget.NumberPicker: int getValue()> -> _SOURCE_
<com.takisoft.datetimepicker.widget.RadialTimePickerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.takisoft.datetimepicker.widget.SimpleMonthView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.takisoft.datetimepicker.widget.TimePicker: int getMinute()> -> _SOURCE_
<com.teladoc.members.sdk.views.FormCellWithSwitch: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.telerik.android.primitives.widget.sidedrawer.NSSideDrawer: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.telerik.android.primitives.widget.sidedrawer.NSSideDrawerLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.telerik.android.primitives.widget.sidedrawer.RadSideDrawer: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.telerik.android.primitives.widget.sidedrawer.contents.NavigationItem: java.lang.String getText()> -> _SOURCE_
<com.telerik.android.primitives.widget.slideview.RadSlideView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.telerik.widget.autocomplete.RadAutoCompleteTextView: java.lang.CharSequence getText()> -> _SOURCE_
<com.telerik.widget.autocomplete.TokenModel: java.lang.String getText()> -> _SOURCE_
<com.telerik.widget.calendar.CalendarScrollManager$DecorationsLayer: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.telerik.widget.calendar.CalendarScrollManager$FragmentHolder$LayerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.telerik.widget.calendar.CalendarScrollManager$FragmentHolder: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.telerik.widget.calendar.CalendarTextElement: java.lang.String getText()> -> _SOURCE_
<com.telerik.widget.calendar.RadCalendarView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.telerik.widget.chart.visualization.behaviors.ChartScaleGestureDetector: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.telerik.widget.chart.visualization.common.RadChartViewBase: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.telerik.widget.dataform.visualization.RadDataForm: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.telerik.widget.list.RadListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.telerik.widget.list.SwipeRefreshBehavior$SwipeRefreshIndicator: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.telerik.widget.numberpicker.RadNumberPicker: double getValue()> -> _SOURCE_
<com.telerik.widget.primitives.panels.RadScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.theinnerhour.b2b.widgets.CircularSlider: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.theinnerhour.b2b.widgets.VideoControllerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.truven.commonandroid.widget.TabToggleButton: void toggle()> -> _SOURCE_
<com.umeng.socialize.shareboard.widgets.SocializeViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.uptech.audiojoy.ui.widget.MediaPlayerController: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.urbanairship.widget.UAWebView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.urbandroid.lux.ui.SegmentedGroup: void setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener)> -> _SOURCE_
<com.venuenext.vncoreui.ui.controls.widgets.Widget$TextWidget: java.lang.String getText()> -> _SOURCE_
<com.venuenext.vncoreui.ui.controls.widgets2.PickerWidget2$PickerItem: java.lang.String getText()> -> _SOURCE_
<com.venuenext.vncoreui.ui.controls.widgets2.SwiperWidget2$SwipeableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.venuenext.vncoreui.ui.controls.widgets2.Widget2$Accessibility: java.lang.String getText()> -> _SOURCE_
<com.virginpulse.genesis.widget.HamburgerButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.virginpulse.genesis.widget.HorizontalPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.virginpulse.genesis.widget.NonSwipeableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.virginpulse.genesis.widget.SlidingPaneLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.virginpulse.genesis.widget.ToggleRadioButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.virginpulse.genesis.widget.ToggleRadioButton: void toggle()> -> _SOURCE_
<com.virginpulse.genesis.widget.expandablecontentlist.ExpandableContentListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.virginpulse.widget.FontEditText: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.virginpulse.widget.FontTextInputEditText: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.virginpulse.widget.SafeAppCompatButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.virginpulse.widget.SafeAppCompatTextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.virginpulse.widget.SafeButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.virginpulse.widget.SafeEditText: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.virginpulse.widget.SafeTextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.virginpulse.widget.SafeViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.virginpulse.widget.ScrollableChildWebView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.voalte.android.ui.widgets.ActivationArea: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.voalte.android.ui.widgets.DirectoryListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.voalte.android.ui.widgets.DynamicListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.voalte.android.ui.widgets.LongTouchDialog: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.voalte.android.ui.widgets.PinchDetectorDetector: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.voalte.android.ui.widgets.SlidingDrawer: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.voalte.android.ui.widgets.SlidingDrawer: void toggle()> -> _SOURCE_
<com.vsee.commonhelpers.widget.LockableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.wahoofitness.fitness.widget.a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.wakeup.smartband.ui.widget.swipe.SwipeContainerLinearLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.wakeup.smartband.ui.widget.swipe.SwipeLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.wakeup.smartband.ui.widget.view.BarGraphView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.wakeup.smartband.ui.widget.view.OverScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.warkiz.widget.IndicatorSeekBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.warnyul.android.widget.FastVideoView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.weightwatchers.experts.ui.views.FilterSwitchView: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.whistle.bolt.ui.legacy.widgets.AddHighlightForFeedsMenuView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.whistle.bolt.ui.legacy.widgets.AddHighlightMenuView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.whistle.bolt.ui.legacy.widgets.RightAlignedInputField: java.lang.String getText()> -> _SOURCE_
<com.whistle.bolt.ui.legacy.widgets.RightAlignedInputField: void addTextChangedListener(android.text.TextWatcher)> -> _SOURCE_
<com.whistle.bolt.ui.widgets.BarChartView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.whistle.bolt.ui.widgets.CircularPlaceOverlay: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.whistle.bolt.ui.widgets.MultiPetAtPlaceMarkerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.whistle.bolt.ui.widgets.QuadrilateralPlaceOverlay: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.whistle.bolt.ui.widgets.TwoLineSwitchListItemView: boolean isChecked()> -> _SOURCE_
<com.whistle.bolt.ui.widgets.TwoLineSwitchListItemView: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.xogrp.thebump.widget.CheckableFrameLayout: void toggle()> -> _SOURCE_
<com.xogrp.thebump.widget.CommunityViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.xogrp.thebump.widget.FixedLabelSlidingTabLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.xogrp.thebump.widget.FixedSlidingTabLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.xogrp.thebump.widget.IconPageIndicator: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.xogrp.thebump.widget.LinePageIndicator: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.xogrp.thebump.widget.PinnedHeaderExpandableListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.xogrp.thebump.widget.PullToSpringBackScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.xogrp.thebump.widget.RippleView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.xogrp.thebump.widget.photoview.VersionedGestureDetector$CupcakeDetector: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.xogrp.thebump.widget.photoview.VersionedGestureDetector$EclairDetector: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.xogrp.thebump.widget.photoview.VersionedGestureDetector$FroyoDetector: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.zipongo.common.ui.widget.CheckableLinearLayout: boolean isChecked()> -> _SOURCE_
<com.zipongo.common.ui.widget.CheckableLinearLayout: void setOnCheckedChangeListener(com.zipongo.common.ui.widget.ObservableCheckable$OnCheckedChangeListener)> -> _SOURCE_
<com.zipongo.common.ui.widget.CheckableLinearLayout: void toggle()> -> _SOURCE_
<com.zipongo.common.ui.widget.CheckableTextView: boolean isChecked()> -> _SOURCE_
<com.zipongo.common.ui.widget.CheckableTextView: void setOnCheckedChangeListener(com.zipongo.common.ui.widget.ObservableCheckable$OnCheckedChangeListener)> -> _SOURCE_
<com.zipongo.common.ui.widget.CheckableTextView: void toggle()> -> _SOURCE_
<com.zipongo.design.widget.CheckableImageView: boolean isChecked()> -> _SOURCE_
<com.zipongo.design.widget.CheckableImageView: void setOnCheckedChangeListener(com.zipongo.design.widget.ObservableCheckable$OnCheckedChangeListener)> -> _SOURCE_
<com.zipongo.design.widget.CheckableImageView: void toggle()> -> _SOURCE_
<com.zipongo.design.widget.CheckableLinearLayout: boolean isChecked()> -> _SOURCE_
<com.zipongo.design.widget.CheckableLinearLayout: void setOnCheckedChangeListener(com.zipongo.design.widget.ObservableCheckable$OnCheckedChangeListener)> -> _SOURCE_
<com.zipongo.design.widget.CheckableLinearLayout: void toggle()> -> _SOURCE_
<com.zipongo.design.widget.CheckableRadioGroup: int getCheckedRadioButtonId()> -> _SOURCE_
<com.zipongo.design.widget.CheckableRadioGroup: void setOnCheckedChangeListener(com.zipongo.design.widget.CheckableRadioGroup$OnCheckedChangeListener)> -> _SOURCE_
<com.zipongo.design.widget.CheckableTextView: boolean isChecked()> -> _SOURCE_
<com.zipongo.design.widget.CheckableTextView: void setOnCheckedChangeListener(com.zipongo.design.widget.ObservableCheckable$OnCheckedChangeListener)> -> _SOURCE_
<com.zipongo.design.widget.CheckableTextView: void toggle()> -> _SOURCE_
<com.zipongo.design.widget.MultiSwipeRefreshLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.zipongo.surveys.widget.TextInput: java.lang.String getText()> -> _SOURCE_
<com.zipongo.ui.widget.MultiSwipeRefreshLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.zlamanit.lib.g.a.a: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<com.zlinepay.jiam.widget.XListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.zocdoc.android.widget.CustomWaitDialog: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.zwift.android.ui.widget.CellsLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<com.zwift.android.ui.widget.CheckedFrameLayout: boolean isChecked()> -> _SOURCE_
<com.zwift.android.ui.widget.CheckedFrameLayout: void toggle()> -> _SOURCE_
<com.zwift.android.ui.widget.CheckedImageButton: boolean isChecked()> -> _SOURCE_
<com.zwift.android.ui.widget.CheckedImageButton: void setOnCheckedChangeListener(com.zwift.android.ui.widget.CheckedImageButton$OnCheckedChangeListener)> -> _SOURCE_
<com.zwift.android.ui.widget.CheckedImageButton: void toggle()> -> _SOURCE_
<com.zwift.android.ui.widget.SafeViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<cootek.sevenmins.sport.refactoring.presentation.ui.widget.SlideUnlockView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<crack.fitness.losebellyfat.widget.MyScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<crack.fitness.losebellyfat.widget.UnlockView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<csmc.edu.mycslink.widget.floatingsearchview.FloatingSearchView$CustomRecyclerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<csmc.edu.mycslink.widget.floatingsearchview.FloatingSearchView: java.lang.CharSequence getText()> -> _SOURCE_
<de.keyboardsurfer.android.widget.crouton.Crouton: java.lang.CharSequence getText()> -> _SOURCE_
<de.komoot.android.widget.KmtScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<de.moodpath.android.widget.NonScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<de.moodpath.android.widget.NonScrollViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<de.moodpath.android.widget.VerticalViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<de.moodpath.android.widget.WrapContentViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.design.widget.CheckableImageButton: boolean isChecked()> -> _SOURCE_
<fgl.android.support.design.widget.CheckableImageButton: void toggle()> -> _SOURCE_
<fgl.android.support.design.widget.CollapsingTextHelper: java.lang.CharSequence getText()> -> _SOURCE_
<fgl.android.support.design.widget.CoordinatorLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.design.widget.FloatingActionButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.design.widget.TabLayout$Tab: java.lang.CharSequence getText()> -> _SOURCE_
<fgl.android.support.v4.widget.DrawerLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.v4.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.v4.widget.SlidingPaneLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.v4.widget.SwipeRefreshLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.v7.widget.AbsActionBarView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.v7.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.v7.widget.ActionBarContextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.v7.widget.AppCompatSpinner: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.v7.widget.ListPopupWindow: long getSelectedItemId()> -> _SOURCE_
<fgl.android.support.v7.widget.ListViewCompat: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.v7.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.v7.widget.SearchView$UpdatableTouchDelegate: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.v7.widget.SwitchCompat: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<fgl.android.support.v7.widget.SwitchCompat: void toggle()> -> _SOURCE_
<fgl.android.support.v7.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<gala.mix.place.widget.CustomViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<gala.mix.place.widget.image.GestureImageView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<gala.mix.place.widget.theme.ThemeImageView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<gala.mix.place.widget.theme.ThemeRelativeLayoutButton: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<gala.mix.place.widget.theme.ThemeTextCheckBox: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<greendroid.widget.PagedView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<hx.widget.VpNoSwipe: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<hydration.watertracker.waterreminder.widget.NoScrollViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<im.ene.lab.toro.widget.ToroVideoView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<io.apptik.widget.MultiSlider: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<io.ghyeok.stickyswitch.widget.StickySwitch: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<io.ghyeok.stickyswitch.widget.StickySwitch: java.lang.String getText()> -> _SOURCE_
<io.huannguyen.commonwidget.DatePickerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<io.huannguyen.commonwidget.TimePickerView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<it.mthree.core.ui.widgets.a: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<it.mthree.headapp.ui.widgets.PainIntensityBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<it.mthree.headapp.ui.widgets.PainIntensityChart: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<it.mthree.headapp.ui.widgets.PainPositionView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<it.sephiroth.android.library.widget.AbsHListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<it.sephiroth.android.library.widget.AdapterView: long getSelectedItemId()> -> _SOURCE_
<it.sephiroth.android.library.widget.a: long getSelectedItemId()> -> _SOURCE_
<kankan.wheel.widget.WheelScroller: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<kankan.wheel.widget.WheelView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<me.imid.view.SwitchButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<mobi.firedepartment.widgets.BottomBarDrawerLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<mobi.firedepartment.widgets.NonSwipeableViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<net.workoutinc.butt_exercises_workouts.customWidget.SwitchButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<net.workoutinc.seven_7minutesfitness_forwomen.customWidget.SwitchButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<org.adw.library.widgets.discreteseekbar.DiscreteSeekBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<org.chromium.ui.widget.TextViewWithClickableSpans: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<org.iggymedia.periodtracker.feature.feed.ui.widgets.MarkdownTextView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<org.jraf.android.backport.switchwidget.Switch: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<org.jraf.android.backport.switchwidget.TwoStatePreference: boolean isChecked()> -> _SOURCE_
<org.metova.android.widgets.ProgressBar: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<org.metova.android.widgets.richcontent.RichContentChildView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<org.metova.android.widgets.richcontent.RichContentTextView: java.lang.CharSequence getText()> -> _SOURCE_
<org.metova.android.widgets.richcontent.RichContentView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<org.pulsepoint.aeds.android.fragments.widgets.MenuToggleButton: void toggle()> -> _SOURCE_
<org.stopbreathethink.app.sbtviews.card_group.CardGroup: void setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener)> -> _SOURCE_
<ru.mobiledimension.kbr.ui.widget.BagTypeView: boolean isChecked()> -> _SOURCE_
<ru.mobiledimension.kbr.ui.widget.BagTypeView: java.lang.CharSequence getText()> -> _SOURCE_
<ru.mobiledimension.kbr.ui.widget.CalculateExpandView: void toggle()> -> _SOURCE_
<ru.mobiledimension.kbr.ui.widget.ExpandView: void toggle()> -> _SOURCE_
<step.tracker.stepcounter.walking.widget.AvatarPickerImageView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<step.tracker.stepcounter.walking.widget.ClockInView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<step.tracker.stepcounter.walking.widget.ContentScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<step.tracker.stepcounter.walking.widget.NoScrollerViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<step.tracker.stepcounter.walking.widget.ScrollLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<step.tracker.stepcounter.walking.widget.view.FastVideoView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<step.tracker.stepcounter.walking.widget.view.HiNetErrorView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<step.tracker.stepcounter.walking.widget.view.TopToBottomFinishLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<steptracker.stepcounter.pedometer.widgets.NoScrollViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<ti.modules.titanium.ui.widget.TiImageView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<ti.modules.titanium.ui.widget.TiUIEditText: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<ti.modules.titanium.ui.widget.TiUILabel$1: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<ti.modules.titanium.ui.widget.TiUIScrollView$TiHorizontalScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<ti.modules.titanium.ui.widget.TiUIScrollView$TiVerticalScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<ti.modules.titanium.ui.widget.TiUIScrollableView$1: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<ti.modules.titanium.ui.widget.listview.TiNestedListView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<ti.modules.titanium.ui.widget.tabgroup.TiUIActionBarTabGroup$1: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<ti.modules.titanium.ui.widget.webview.TiUIWebView$TiWebView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<today.onedrop.android.common.widget.CircularSlider: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<today.onedrop.android.common.widget.ClearableEditText: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<today.onedrop.android.common.widget.MultiSlider: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<view.RallySwitch: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> -> _SOURCE_
<walking.pedometer.fit.stepcounter.widget.AvatarPickerImageView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<walking.pedometer.fit.stepcounter.widget.ContentScrollView: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<walking.pedometer.fit.stepcounter.widget.NoScrollerViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_
<walking.pedometer.fit.stepcounter.widget.ScrollLayout: boolean onTouchEvent(android.view.MotionEvent)> -> _SOURCE_


<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)> -> _SINK_
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])> -> _SINK_
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])> -> _SINK_
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)> -> _SINK_
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)> -> _SINK_
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)> -> _SINK_
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])> -> _SINK_
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String, android.content.ContentValues, java.lang.String, java.lang.String[])> -> _SINK_
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String, java.lang.String, android.content.ContentValues)> -> _SINK_
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String, java.lang.String, android.content.ContentValues)> -> _SINK_
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)> -> _SINK_
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String, java.lang.Object[])> -> _SINK_
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String, java.lang.String, android.content.ContentValues)> -> _SINK_
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String, java.lang.String, java.lang.String[])> -> _SINK_
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String, android.content.ContentValues, java.lang.String, java.lang.String[])> -> _SINK_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String, java.lang.String[])> -> _SINK_
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)> -> _SINK_
<android.database.sqlite.SQLiteDatabase: void close()> -> _SINK_

<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)> -> _SINK_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)> -> _SINK_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)> -> _SINK_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)> -> _SINK_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)> -> _SINK_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putStringSet(java.lang.String, java.util.Set<java.lang.String> -> _SINK_)> -> _SINK_



<io.realm.Realm: void insertOrUpdate(io.realm.RealmModel)> -> _SINK_
<io.realm.Realm: void executeTransaction(io.realm.Realm.Transaction)> -> _SINK_
<io.realm.Realm: void insert(io.realm.RealmModel)> -> _SINK_

<androidx.room.Dao: int delete(User)> -> _SINK_
<androidx.room.Dao: int update(User)> -> _SINK_
<androidx.room.Dao: long insert(User)> -> _SINK_

<net.sqlcipher.database.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])> -> _SINK_
<net.sqlcipher.database.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])> -> _SINK_
<net.sqlcipher.database.SQLiteDatabase: void execSQL(java.lang.String)> -> _SINK_

<android.content.ContentResolver: int delete(android.net.Uri, java.lang.String, java.lang.String[])> -> _SINK_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)> -> _SINK_

<com.google.firebase.database.DatabaseReference: com.google.android.gms.tasks.Task<java.lang.Void> setValue(java.lang.Object)> -> _SINK_
<com.google.firebase.database.DatabaseReference: com.google.android.gms.tasks.Task<java.lang.Void> updateChildren(java.util.Map<java.lang.String,java.lang.Object>)> -> _SINK_
<com.google.firebase.firestore.DocumentReference: com.google.android.gms.tasks.Task<java.lang.Void> set(java.util.Map<java.lang.String,java.lang.Object>)> -> _SINK_
<com.google.firebase.firestore.DocumentReference: com.google.android.gms.tasks.Task<java.lang.Void> update(java.util.Map<java.lang.String,java.lang.Object>)> -> _SINK_
